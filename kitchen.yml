# NOTE: This test-kitchen file contains ERB code to cut-down on boilerplate;
# YAML linters will complain!
# yamllint disable
<%
require 'open3'
require 'json'

# Parse the outputs of the test harness
tf_output, rc = Open3.capture2('terraform -chdir=test/setup output -json')
if rc != 0
  abort 'Failed to capture Terraform output from test/setup'
end
harness_outputs = JSON.parse(tf_output).map { |k,v| [k, v['value']] }.to_h

def tf_client(version)
  full_version, rc = Open3.capture2("asdf latest terraform #{version}")
  if rc != 0
    abort "Failed to determine latest terraform version matching #{version}"
  end
  client, rc = Open3.capture2("asdf where terraform #{full_version.chomp}")
  if rc != 0
    abort "Failed to locate installed terraform #{full_version.chomp} command"
  end
  "#{client.chomp}/bin/terraform"
end

tf_clients = [0.14, 0.15, 1.0, 1.1, 1.2, 1.3].map{ |v| ["tf#{v}".sub(/\W/, "-"), tf_client(v)]}.to_h
%>
---
driver:
  name: terraform
  command_timeout: 60
  verify_version: true
  variables:
    project_id: <%= harness_outputs['project_id'] %>

provisioner:
  name: terraform

verifier:
  name: terraform
  color: true
  systems:
    - name: secrets
      backend: gcp
      profile_locations:
        - test/profiles/secrets

platforms:
<% tf_clients.each do |k,v| %>
  - name: <%= k %>
    driver:
      client: <%= v %>
      variables:
        prefix: <%= "#{harness_outputs['prefix']}-#{k}" %>
<% end %>

suites:
  - name: root-minimal
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-minimal
        secret: terribleS3cr3t
  - name: root-all
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-all
        accessors: '[\"serviceAccount:<%= harness_outputs['service_account_email'] %>\"]'
        labels: '{<%= harness_outputs['labels'].to_a.map{|pair| sprintf('%s=\"%s\"', pair[0], pair[1])}.join(',') %>}'
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s={kms_key_name=\"%s\"}', pair[0], pair[1]['key'])}.join(',') %>}'
        secret: terribleS3cr3t
  - name: root-null-secret
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-null-secret
        # terraform-kitchen requires all values to be scalar, so use a flag in
        # the fixture to force setting value to null
        secret: 'null'
        null_secret: 'true'
  - name: root-empty-secret
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-empty-secret
        secret: ''
  - name: root-replication-null-values
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-replication-null-keys
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s=null', pair[0])}.join(',') %>}'
        secret: terribleS3cr3t
  - name: root-replication-keys-null
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-replication-keys-null
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s={kms_key_name=null}', pair[0])}.join(',') %>}'
        secret: terribleS3cr3t
  - name: root-replication-keys-empty
    driver:
      root_module_directory: test/fixtures/root
      variables:
        test_name: root-replication-keys-empty
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s={kms_key_name=\"\"}', pair[0])}.join(',') %>}'
        secret: terribleS3cr3t
  - name: example-accessors
    driver:
      root_module_directory: test/fixtures/examples/accessors
      variables:
        test_name: example-accessors
        accessors: '[\"serviceAccount:<%= harness_outputs['service_account_email'] %>\"]'
        secret: terribleS3cr3t
  - name: example-all-options
    driver:
      root_module_directory: test/fixtures/examples/all-options
      variables:
        test_name: example-all-options
        accessors: '[\"serviceAccount:<%= harness_outputs['service_account_email'] %>\"]'
        labels: '{<%= harness_outputs['labels'].to_a.map{|pair| sprintf('%s=\"%s\"', pair[0], pair[1])}.join(',') %>}'
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s={kms_key_name=\"%s\"}', pair[0], pair[1]['key'])}.join(',') %>}'
        secret: terribleS3cr3t
  - name: example-simple
    driver:
      root_module_directory: test/fixtures/examples/simple
      variables:
        test_name: example-simple
        secret: terribleS3cr3t
  # Disabled - need to use -target to instantiate correctly
  # - name: example-with-random-provider
  #   driver:
  #     root_module_directory: test/fixtures/examples/with-random-provider
  #     variables:
  #       test_name: example-with-random-provider
  - name: example-user-managed-replication
    driver:
      root_module_directory: test/fixtures/examples/user-managed-replication
      variables:
        test_name: example-user-managed-replication
        secret: terribleS3cr3t
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s=null', pair[0])}.join(',') %>}'
  - name: example-user-managed-replication-accessors
    driver:
      root_module_directory: test/fixtures/examples/user-managed-replication-accessors
      variables:
        test_name: example-user-managed-replication-accessors
        accessors: '[\"serviceAccount:<%= harness_outputs['service_account_email'] %>\"]'
        secret: terribleS3cr3t
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s=null', pair[0])}.join(',') %>}'
  - name: example-user-managed-replication-with-keys
    driver:
      root_module_directory: test/fixtures/examples/user-managed-replication-with-keys
      variables:
        test_name: example-user-managed-replication-with-keys
        replication: '{<%= harness_outputs['replication'].to_a.map{|pair| sprintf('%s={kms_key_name=\"%s\"}', pair[0], pair[1]['key'])}.join(',') %>}'
        secret: terribleS3cr3t
  - name: example-empty-secret-value
    driver:
      root_module_directory: test/fixtures/examples/empty-secret-value
      variables:
        test_name: example-empty-secret-value
  - name: verify-issue-51
    excludes:
      - tf0-14
    driver:
      root_module_directory: test/fixtures/issue-51
      variables:
        test_name: issue-51
        secret: terribleS3cr3t
